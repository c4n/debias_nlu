#!/bin/bash -l
#SBATCH --error=/ist/users/canu/slurm_log/task.out.%j  # STDOUT output is written in slurm.out.JOBID
#SBATCH --output=/ist/users/canu/slurm_log/task.out.%j # STDOUT error is written in slurm.err.JOBID
#SBATCH --job-name=eval       # Job name
#SBATCH --mem=32GB                  # Memory request for this job
#SBATCH --nodes=1                   # The number of nodes
#SBATCH --partition=scads
#SBATCH --account=scads
#SBATCH --time=2:0:0                # Runing time 2 hours
#SBATCH --gpus=1                    # A number of GPUs  

# module load Anaconda3
 module load CUDA/10.1
 module load cuDNN/7
 module load HDF5

MODEL_DIR="/ist/ist-share/scads/can/outputs_bert_base_clark_1/counterfactual/distill_model_0"
# mnli + mnli/snli hard + kaushik 
echo $MODEL_DIR
cd ~/debias_nlu
source ~/CI_env/bin/activate

mkdir -p  $MODEL_DIR/counterfactual


# Temp Scale
# ON DEV SET!!!
if [ ! -f $MODEL_DIR/temperature.pt  ]; then
    allennlp temp_scale $MODEL_DIR/model.tar.gz data/nli/multinli_1.0_dev_matched.jsonl   --output-file $MODEL_DIR/temperature.pt --cuda-device 0 --include-package my_package 
fi

# if [ ! -f $MODEL_DIR/counterfactual/cf_weight.txt  ]; then
#     # Predict
#     allennlp cf_predict_scale $MODEL_DIR/model.tar.gz data/nli/multinli_1.0_dev_matched.jsonl $MODEL_DIR/temperature.pt --output-file $MODEL_DIR/counterfactual/pre_raw_dev_result_0.jsonl --batch-size 192  --cf_type counterfactual_snli --cf_weight  0.0  --predictor dev_scale --cuda-device 0 --include-package my_package --silent # standard eval
#     # Find optimal cf weight  and get prediction from CF framework
#     python  utils/mnli_ray_tune.py  -m $MODEL_DIR/counterfactual/pre_raw_dev_result_0.jsonl  -o $MODEL_DIR/counterfactual
#     cf_weight=$(<$MODEL_DIR/counterfactual/cf_weight.txt)
#     entropy_curve=$(<$MODEL_DIR/counterfactual/entropy_curve.txt)
# fi

cf_weight=1.0
entropy_curve=1.0

MNLI_PARAMS=($MODEL_DIR/model.tar.gz  
/ist/users/canu/debias_nlu/data/nli/multinli_1.0_dev_mismatched.jsonl:/ist/users/canu/debias_nlu/data/nli/snli_1.0_test_hard.jsonl:/ist/users/canu/debias_nlu/data/nli/dev_mismatched_hard.jsonl:/ist/users/canu/debias_nlu/data/nli/test_kaushik_RP.jsonl:/ist/users/canu/debias_nlu/data/nli/test_kaushik_RH.jsonl:/ist/users/canu/debias_nlu/data/nli/test_kaushik_combined.jsonl
$MODEL_DIR/temperature.pt
--output-file=$MODEL_DIR/counterfactual/result.txt:$MODEL_DIR/counterfactual/snli_hard_result.txt:$MODEL_DIR/counterfactual/mnli_hard_dev_mm_result.txt:$MODEL_DIR/counterfactual/kaushik_rp_result.txt:$MODEL_DIR/counterfactual/kaushik_rh_result.txt:$MODEL_DIR/counterfactual/kaushik_combined_result.txt
--cuda-device=0
--entropy_curve=$entropy_curve
--cf_weight=$cf_weight
--cf_method=entropy
--include-package=my_package)
allennlp evaluate_mult_cf_scale ${MNLI_PARAMS[@]} # standard eval


# hans
allennlp cf_predict_scale $MODEL_DIR/model.tar.gz data/nli/heuristics_evaluation_set.jsonl $MODEL_DIR/temperature.pt --output-file $MODEL_DIR/counterfactual/hans_results.jsonl --batch-size 192 --cuda-device 0 --cf_type counterfactual_snli --cf_weight  $cf_weight   --entropy_curve  $entropy_curve  --predictor cf_textual_entailment_entropy_scale --include-package my_package --silent
cd utils/
python hans_parser.py -i $MODEL_DIR/counterfactual/hans_results.jsonl -o $MODEL_DIR/counterfactual/hans_results.out
python evaluate_heur_output.py $MODEL_DIR/counterfactual/hans_results.out > $MODEL_DIR/counterfactual/hans_results.txt
cd -


# naik stress test
# echo "Stress Test (Naik et al., 2018)" 
# cd ~/CI4RRL_project

echo $MODEL_DIR

# echo "naik"
# NAIK_PARAMS=($MODEL_DIR/model.tar.gz  
# /ist/users/canu/debias_nlu/data/nli/naik_stress_test/stress_tests/Antonym/multinli_0.9_antonym_mismatched.jsonl:/ist/users/canu/debias_nlu/data/nli/naik_stress_test/stress_tests/Numerical_Reasoning/multinli_0.9_quant_hard.jsonl:/ist/users/canu/debias_nlu/data/nli/naik_stress_test/stress_tests/Word_Overlap/multinli_0.9_taut2_mismatched.jsonl:/ist/users/canu/debias_nlu/data/nli/naik_stress_test/stress_tests/Negation/multinli_0.9_negation_mismatched.jsonl:/ist/users/canu/debias_nlu/data/nli/naik_stress_test/stress_tests/Length_Mismatch/multinli_0.9_length_mismatch_mismatched.jsonl:/ist/users/canu/debias_nlu/data/nli/naik_stress_test/stress_tests/Spelling_Error/multinli_0.9_dev_gram_all_mismatched.jsonl
# --output-file=$MODEL_DIR/antonym_result.txt:$MODEL_DIR/numerical_reasoning_result.txt:$MODEL_DIR/word_overlap_result.txt:$MODEL_DIR/negation_result.txt:$MODEL_DIR/length_mismatch_result.txt:$MODEL_DIR/spelling_result.txt
# --cuda-device=0
# --entropy_curve=$entropy_curve
# --cf_weight=$cf_weight
# --cf_method=entropy
# --include-package=my_package)
# allennlp evaluate_mult_cf_scale ${MNLI_PARAMS[@]} # standard eval




