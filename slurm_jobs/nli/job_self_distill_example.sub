#!/bin/bash -l
#SBATCH --error=/ist/users/canu/slurm_log/task.out.%j  # STDOUT output is written in slurm.out.JOBID
#SBATCH --output=/ist/users/canu/slurm_log/task.out.%j # STDOUT error is written in slurm.err.JOBID
#SBATCH --job-name=distill       # Job name
#SBATCH --mem=64GB                  # Memory request for this job
#SBATCH --nodes=1                   # The number of nodes
#SBATCH --partition=gpu-cluster
#SBATCH --account=scads
#SBATCH --time=24:0:0                # Runing time 2 hours
#SBATCH --gpus=1                    # A number of GPUs  

# module load Anaconda3
 module load CUDA/10.1
 module load cuDNN/7
 module load HDF5

MODEL_DIR="/ist/ist-share/scads/can/xxxx"
# mnli + mnli/snli hard + kaushik 
echo $MODEL_DIR
cd ~/debias_nlu
source ~/CI_env/bin/activate

# Train Model
# include train command here if you dont already have the model path
#TempScale
 allennlp temp_scale $MODEL_DIR/model.tar.gz data/xxx/dev_set.jsonl   --output-file $MODEL_DIR/temperature.pt --cuda-device 0 --include-package my_package 
# Predict to get calibrated softmax
# change MODEL_DIR
# change data/xxx/train.jsonl to the correct trainning set for your task
allennlp cf_predict_scale $MODEL_DIR/model.tar.gz data/xxx/train.jsonl $MODEL_DIR/temperature.pt --output-file $MODEL_DIR/raw_train_result_0.jsonl --batch-size 192 --cuda-device 0 --cf_type counterfactual_snli --cf_weight  0   --entropy_curve  0 --predictor cf_textual_entailment_distill --include-package my_package --silent



max=0
for i in `seq 0 $max`
do
    # Distill
    ## Generate Training Set with Soft Target
    python utils/create_distill_train_set.py -t data/xxx/train_with_sample_weight.jsonl -p $MODEL_DIR/raw_train_result_${i}.jsonl -o  $MODEL_DIR/distill_output_${i}.jsonl 
    ## Train a distilled model
    allennlp train configs/nli/xxx/distill.jsonnet -s $MODEL_DIR/distill_model_${i} --include-package my_package --overrides '{"train_data_path": "'"$MODEL_DIR/distill_output_${i}.jsonl"'",}'
    # Temp Scale
    allennlp temp_scale $MODEL_DIR/distill_model_${i}/model.tar.gz data/xxx/dev_set.jsonl   --output-file $MODEL_DIR/distill_model_${i}/temperature.pt --cuda-device 0 --include-package my_package 
    ## Predict
    next_distill=$((i+1))
    allennlp cf_predict_scale $MODEL_DIR/distill_model2_${i} data/nli/multinli_1.0_train.jsonl $MODEL_DIR/distill_model_${i}/temperature.pt --output-file $MODEL_DIR/raw_train_result_${next_distill}.jsonl --batch-size 64 --predictor cf_textual_entailment_distill --cuda-device 0 --cf_weight  0.0  --entropy_curve  0 --include-package my_package --silent
done


